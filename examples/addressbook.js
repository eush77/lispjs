var LispJs={};LispJs.plus=function(){for(var t=arguments[0],r=1;r<arguments.length;++r)t+=arguments[r];return t},LispJs.minus=function(){for(var t=arguments[0],r=1;r<arguments.length;++r)t-=arguments[r];return t},LispJs.times=function(){for(var t=1,r=0;r<arguments.length;++r)t*=arguments[r];return t},LispJs.div=function(){for(var t=arguments[0],r=1;r<arguments.length;++r)t/=arguments[r];return t},LispJs.list=function(){return Array.prototype.slice.call(arguments)},LispJs.createObjFromArray=function(t){for(var r={},e=0;e<t.length;e+=2)r[t[e]]=t[e+1];return r},LispJs.equals=function(t,r){return t==r},LispJs.lessThan=function(t,r){return r>t},LispJs.greaterThan=function(t,r){return t>r},LispJs.get=function(t,r){return t[r]},LispJs.set=function(t,r,e){t[r]=e},LispJs.car=function(t){return t[0]},LispJs.cdr=function(t){return t.slice(1)};var ArrayProto=Array.prototype,ObjProto=Object.prototype,FuncProto=Function.prototype,nativeForEach=ArrayProto.forEach,nativeMap=ArrayProto.map,nativeReduce=ArrayProto.reduce,nativeReduceRight=ArrayProto.reduceRight,nativeFilter=ArrayProto.filter,nativeEvery=ArrayProto.every,nativeSome=ArrayProto.some,nativeIndexOf=ArrayProto.indexOf,nativeLastIndexOf=ArrayProto.lastIndexOf,nativeIsArray=Array.isArray,nativeKeys=Object.keys,nativeBind=FuncProto.bind;LispJs.map=function(t,r,e){var n=[];return null==t?n:nativeMap&&t.map===nativeMap?t.map(r,e):(each(t,function(t,a,i){n.push(r.call(e,t,a,i))}),n)},LispJs.foldl=function(t,r,e,n){var a=arguments.length>2;if(null==t&&(t=[]),nativeReduce&&t.reduce===nativeReduce)return n&&(r=LispJs.bind(r,n)),a?t.reduce(r,e):t.reduce(r);if(each(t,function(t,i,s){a?e=r.call(n,e,t,i,s):(e=t,a=!0)}),!a)throw new TypeError(reduceError);return e},LispJs.foldr=function(t,r,e,n){var a=arguments.length>2;if(null==t&&(t=[]),nativeReduceRight&&t.reduceRight===nativeReduceRight)return n&&(r=LispJs.bind(r,n)),a?t.reduceRight(r,e):t.reduceRight(r);var i=t.length;if(i!==+i){var s=LispJs.keys(t);i=s.length}if(each(t,function(o,u,c){u=s?s[--i]:--i,a?e=r.call(n,e,t[u],u,c):(e=t[u],a=!0)}),!a)throw new TypeError(reduceError);return e},LispJs.bind=function(t,r){var e,n;if(nativeBind&&t.bind===nativeBind)return nativeBind.apply(t,slice.call(arguments,1));if("function"==typeof t)throw new TypeError;return e=slice.call(arguments,2),n=function(){if(!(this instanceof n))return t.apply(r,e.concat(slice.call(arguments)));ctor.prototype=t.prototype;var a=new ctor;ctor.prototype=null;var i=t.apply(a,e.concat(slice.call(arguments)));return Object(i)===i?i:a}},LispJs.filter=function(t,r,e){var n=[];return null==t?n:nativeFilter&&t.filter===nativeFilter?t.filter(r,e):(each(t,function(t,a,i){r.call(e,t,a,i)&&n.push(t)}),n)},"undefined"!=typeof exports&&(exports.LispJs=LispJs),contacts=LispJs.list(LispJs.createObjFromArray(LispJs.list("name","Dennis Ritchie","phone","3045553141")),LispJs.createObjFromArray(LispJs.list("name","Edsger Dijkstra","phone","3045551618")),LispJs.createObjFromArray(LispJs.list("name","Donald Knuth","phone","3045551346"))),updateTable=function(){return $("#addrTbl tbody").html(""),$.each(contacts,function(t,r){return $("#addrTbl tbody").append(LispJs.plus("<tr contacti='",t,"'><td>",r.name,"</td> <td>",r.phone,"</td><td><button class='btn btn-danger'>Delete</button></td></tr>"))}),$(".btn-danger").click(function(){return contactId=$(this).parents("tr").attr("contacti"),contacts.splice(contactId,1),updateTable()})},jQuery(function(t){return t("#addContactBtn").click(function(){return t("#addModal").modal()}),t("#addBtn").click(function(){return contacts.push(LispJs.createObjFromArray(LispJs.list("name",t("#newName").val(),"phone",t("#newPhone").val()))),updateTable(),t("#addModal").modal("hide")}),updateTable()});